var search_data = {"index":{"searchIndex":["findsifadditive","object","check_if_additive()","check_integer_input()","find_prime_combos()","find_primes_less_than()","new()","secret()","so_totally_not_secret()","test_prime_combos_for_additive()","readme"],"longSearchIndex":["findsifadditive","object","findsifadditive#check_if_additive()","findsifadditive#check_integer_input()","findsifadditive#find_prime_combos()","findsifadditive#find_primes_less_than()","findsifadditive::new()","object#secret()","object#so_totally_not_secret()","findsifadditive#test_prime_combos_for_additive()",""],"info":[["FindsIfAdditive","","FindsIfAdditive.html","","<p>To call secret linear additive function:\n\n<pre>secret(n)</pre>\n<p>To call secret function that will NOT be linear additive: …\n"],["Object","","Object.html","",""],["check_if_additive","FindsIfAdditive","FindsIfAdditive.html#method-i-check_if_additive","(x, y)","<p>Compares if additive passing two int (from test_prime_combos_for_additive)\nAs long as each check remains …\n"],["check_integer_input","FindsIfAdditive","FindsIfAdditive.html#method-i-check_integer_input","()","<p>Performs simple check to make sure the user is inputting only integers\n"],["find_prime_combos","FindsIfAdditive","FindsIfAdditive.html#method-i-find_prime_combos","()","<p>Finds combinations of primes from @list_of_primes Uses built-in ruby method\n.combination which finds …\n"],["find_primes_less_than","FindsIfAdditive","FindsIfAdditive.html#method-i-find_primes_less_than","(n)","<p>Runs the Prime module and saves as array to var @list_of_primes\n"],["new","FindsIfAdditive","FindsIfAdditive.html#method-c-new","()","<p>Upon creation of class instance:\n<p>First gets input from the terminal\n<p>Checks that for integer presence\n"],["secret","Object","Object.html#method-i-secret","(diary)",""],["so_totally_not_secret","Object","Object.html#method-i-so_totally_not_secret","(as_if)",""],["test_prime_combos_for_additive","FindsIfAdditive","FindsIfAdditive.html#method-i-test_prime_combos_for_additive","()","<p>For each prime combo - runs check_if_additive Passes in both values in the\ncombo Saves iteration for …\n"],["README","","README_md.html","","<p>Additive Function with Primes\n<p>Built on Ruby 2.1.1\n<p>Setup\n"]]}}